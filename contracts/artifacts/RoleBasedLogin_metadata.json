{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum RoleBasedLogin.Role",
						"name": "role",
						"type": "uint8"
					}
				],
				"name": "UserLoggedIn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "username",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "enum RoleBasedLogin.Role",
						"name": "role",
						"type": "uint8"
					}
				],
				"name": "UserRegistered",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getMyDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "username",
								"type": "string"
							},
							{
								"internalType": "enum RoleBasedLogin.Role",
								"name": "role",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "isRegistered",
								"type": "bool"
							}
						],
						"internalType": "struct RoleBasedLogin.User",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyRole",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "login",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "role",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "logout",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_username",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_role",
						"type": "string"
					}
				],
				"name": "register",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getMyRole()": {
					"notice": "PUBLIC: Returns the role of the calling user in string form."
				},
				"login()": {
					"notice": "Simulates login. - Returns `true` and the user's role if registered."
				},
				"register(string,string)": {
					"notice": "Register a new user with a username and a role. - `_username`: display name for the user. - `_role`: must be either \"donor\" or \"collector\"."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/rolebasedlogin.sol": "RoleBasedLogin"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/rolebasedlogin.sol": {
			"keccak256": "0x526f4f13df57820164c923a6f25a60d7a7b7dde22157bcece088549b861f952e",
			"license": "MIT",
			"urls": [
				"bzz-raw://ead4a5cf875712445cb74cbcf765a9f5d32f0e8b6f5939b4f99638f5e68a392e",
				"dweb:/ipfs/QmYLLY41hWpAXvNGvUHNmrozr6mV7JHzwW71hCnkYKmeau"
			]
		}
	},
	"version": 1
}